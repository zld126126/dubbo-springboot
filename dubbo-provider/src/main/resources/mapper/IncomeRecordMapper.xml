<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dongtech.mapper.loan.IncomeRecordMapper">

  <resultMap id="BaseResultMap" type="com.dongtech.model.loan.IncomeRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="loanId" jdbcType="INTEGER" property="loanId" />
    <result column="bidId" jdbcType="INTEGER" property="bidId" />
    <result column="incomeDate" jdbcType="DATE" property="incomeDate" />
    <result column="bidMoney" jdbcType="DOUBLE" property="bidMoney" />
    <result column="incomeMoney" jdbcType="DOUBLE" property="incomeMoney" />
    <result column="incomeStatus" jdbcType="INTEGER" property="incomeStatus" />
  </resultMap>
  
  <resultMap id="incomeLoanBaseResultMap" type="com.dongtech.model.loan.IncomeRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="loanId" jdbcType="INTEGER" property="loanId" />
    <result column="bidId" jdbcType="INTEGER" property="bidId" />
    <result column="incomeDate" jdbcType="DATE" property="incomeDate" />
    <result column="bidMoney" jdbcType="DOUBLE" property="bidMoney" />
    <result column="incomeMoney" jdbcType="DOUBLE" property="incomeMoney" />
    <result column="incomeStatus" jdbcType="INTEGER" property="incomeStatus" />
    <association property="loanInfo" javaType="com.dongtech.model.loan.LoanInfo">
        <id column="id" jdbcType="INTEGER" property="id" />
	    <result column="product_name" jdbcType="VARCHAR" property="productName" />
	    <result column="rate" jdbcType="DOUBLE" property="rate" />
	    <result column="cycle" jdbcType="INTEGER" property="cycle" />
	    <result column="release_time" jdbcType="DATE" property="releaseTime" />
	    <result column="product_type" jdbcType="INTEGER" property="productType" />
	    <result column="product_no" jdbcType="VARCHAR" property="productNo" />
	    <result column="product_money" jdbcType="DOUBLE" property="productMoney" />
	    <result column="left_product_money" jdbcType="DOUBLE" property="leftProductMoney" />
	    <result column="bid_min_limit" jdbcType="DOUBLE" property="bidMinLimit" />
	    <result column="bid_max_limit" jdbcType="DOUBLE" property="bidMaxLimit" />
	    <result column="product_status" jdbcType="INTEGER" property="productStatus" />
	    <result column="product_full_time" jdbcType="DATE" property="productFullTime" />
	    <result column="version" jdbcType="INTEGER" property="version" />
    </association>
  </resultMap>
  
  <sql id="Base_Column_List">
    id, uid, loanId, bidId, incomeDate, bidMoney, incomeMoney, incomeStatus
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_income_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="getIncomeRecordByTotal" parameterType="java.util.Map" resultType="java.lang.Integer">
    select 
    count(*)
    from b_income_record a left join b_loan_info b on a.loanId=b.id
    where a.uid = #{uid,jdbcType=INTEGER} order by a.incomeDate desc
  </select>
  
  <select id="getIncomeRecordByPage" parameterType="java.util.Map" resultMap="incomeLoanBaseResultMap">
    select 
    a.*, b.*
    from b_income_record a left join b_loan_info b on a.loanId=b.id
    where a.uid = #{uid,jdbcType=INTEGER} order by a.incomeDate desc
    limit #{currentPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  </select>
  
  <select id="getIncomeRecordByIncomeDateIsCurrentDate" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_income_record
    where date(incomeDate) = curdate() and incomeStatus=0
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from b_income_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.dongtech.model.loan.IncomeRecord">
    insert into b_income_record (id, uid, loanId, 
      bidId, incomeDate, incomeMoney
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{loanid,jdbcType=INTEGER}, 
      #{bidid,jdbcType=INTEGER}, #{incomeDate,jdbcType=DATE}, #{incomemoney,jdbcType=DOUBLE}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.dongtech.model.loan.IncomeRecord">
    insert into b_income_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="loanId != null">
        loanId,
      </if>
      <if test="bidId != null">
        bidId,
      </if>
      <if test="incomeDate != null">
        incomeDate,
      </if>
      <if test="bidMoney != null">
        bidMoney,
      </if>
      <if test="incomeMoney != null">
        incomeMoney,
      </if>
      <if test="incomeStatus != null">
        incomeStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="loanId != null">
        #{loanId,jdbcType=INTEGER},
      </if>
      <if test="bidId != null">
        #{bidId,jdbcType=INTEGER},
      </if>
      <if test="incomeDate != null">
        #{incomeDate,jdbcType=DATE},
      </if>
      <if test="bidMoney != null">
        #{bidMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeMoney != null">
        #{incomeMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeStatus != null">
        #{incomeStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.dongtech.model.loan.IncomeRecord">
    update b_income_record
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="loanId != null">
        loanId = #{loanId,jdbcType=INTEGER},
      </if>
      <if test="bidId != null">
        bidId = #{bidId,jdbcType=INTEGER},
      </if>
      <if test="incomeDate != null">
        incomeDate = #{incomeDate,jdbcType=DATE},
      </if>
      <if test="bidMoney != null">
        bidMoney = #{bidMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeMoney != null">
        incomeMoney = #{incomeMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeStatus != null">
        incomeStatus = #{incomeStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>